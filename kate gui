import tkinter as tk
from tkinter import simpledialog

# Library for saving tasks
def save_task(task):
    with open("tasks.txt", "a") as file:
        file.write(task + "\n")

# Function to handle adding a task
def add_task():
    task = entry_task.get()
    category = category_var.get()  # Retrieve the selected category
    if task:
        details = simpledialog.askstring("Task Details", "Enter task details:")
        if details:
            formatted_task = f"{task} - {details} : {category}"  # Add the category and details to the task
        else:
            formatted_task = f"{task} - {category}"  # If no details provided
        listbox_tasks.insert(tk.END, formatted_task)
        save_task(formatted_task)  # Save the task using the library
        entry_task.delete(0, tk.END)

# Function to handle editing a task
def edit_task():
    try:
        index = listbox_tasks.curselection()[0]
        selected_task = listbox_tasks.get(index)
        new_task = entry_edit.get()
        listbox_tasks.delete(index)
        listbox_tasks.insert(index, new_task)
        entry_edit.delete(0, tk.END)
    except IndexError:
        pass

# Function to mark a task as complete
def mark_as_complete():
    try:
        index = listbox_tasks.curselection()[0]
        listbox_tasks.itemconfig(index, {'bg': 'gray'})
    except IndexError:
        pass

# Function to delete a task
def delete_task():
    try:
        index = listbox_tasks.curselection()[0]
        listbox_tasks.delete(index)
    except IndexError:
        pass

# Function to toggle between dark and light mode
def toggle_theme():
    current_bg = root.cget("bg")
    if current_bg == "white":
        root.configure(bg="black")
        button_toggle_theme.config(text="Light Mode", bg="white", fg="black")
    else:
        root.configure(bg="white")
        button_toggle_theme.config(text="Dark Mode", bg="black", fg="white")

# Create the main application window
root = tk.Tk()
root.title("To-Do List")
root.configure(bg="white")  # Set initial background color to white

# Create input field for adding tasks
entry_task = tk.Entry(root)
entry_task.pack(pady=10)

# Create a dropdown menu for task categories
categories = ['Personal', 'Work', 'School', 'Others']
category_var = tk.StringVar(root)
category_var.set(categories[0])  # Set the default category
category_menu = tk.OptionMenu(root, category_var, *categories)
category_menu.pack(pady=5)

# Button to add a task
button_add = tk.Button(root, text="Add Task", command=add_task)
button_add.pack(pady=5)

# Listbox to display tasks
listbox_tasks = tk.Listbox(root, height=10, width=50)
listbox_tasks.pack(pady=10)

# Entry field for editing a task
entry_edit = tk.Entry(root)
entry_edit.pack(pady=5)

# Button to edit a task
button_edit = tk.Button(root, text="Edit Task", command=edit_task)
button_edit.pack(pady=5)

# Button to mark a task as complete
button_complete = tk.Button(root, text="Mark as Complete", command=mark_as_complete)
button_complete.pack(pady=5)

# Button to delete a task
button_delete = tk.Button(root, text="Delete Task", command=delete_task)
button_delete.pack(pady=5)

# Button to toggle between dark and light mode
button_toggle_theme = tk.Button(root, text="Dark Mode", command=toggle_theme)
button_toggle_theme.pack(pady=5)

# Start the GUI event loop
root.mainloop()
